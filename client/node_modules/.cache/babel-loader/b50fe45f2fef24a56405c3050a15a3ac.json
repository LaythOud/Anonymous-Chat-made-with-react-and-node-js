{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/Component/Call.js\";\nimport React from 'react';\nexport default function Call(props) {\n  4;\n  const myPeer = new Peer(undefined, {\n    host: '/',\n    port: '3001'\n  });\n  const myVideo = document.createElement('video');\n  myVideo.muted = true;\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true\n  }).then(stream => {\n    addVideoStream(myVideo, stream);\n    myPeer.on('call', call => {\n      call.answer(stream);\n      const video = document.createElement('video');\n      call.on('stream', userVideoStream => {\n        addVideoStream(video, userVideoStream);\n      });\n    });\n    socket.on('user-connected', userId => {\n      connectToNewUser(userId, stream);\n    });\n    socket.on('user-disconnected', userId => {\n      if (peers[userId]) peers[userId].close();\n    });\n  });\n  myPeer.on('open', id => {\n    socket.emit('join-room', ROOM_ID, 10);\n  });\n\n  function connectToNewUser(userId, stream) {\n    const call = myPeer.call(userId, stream);\n    const video = document.createElement('video');\n    call.on('stream', userVideoStream => {\n      addVideoStream(video, userVideoStream);\n    });\n    call.on('close', () => {\n      video.remove();\n    });\n  }\n\n  function addVideoStream(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n      video.play();\n    });\n    videoGrid.append(video);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Call\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper fadeInDown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"formContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"video-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_c = Call;\n\nvar _c;\n\n$RefreshReg$(_c, \"Call\");","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/Component/Call.js"],"names":["React","Call","props","myPeer","Peer","undefined","host","port","myVideo","document","createElement","muted","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","on","call","answer","userVideoStream","socket","userId","connectToNewUser","peers","close","id","emit","ROOM_ID","remove","srcObject","addEventListener","play","videoGrid","append"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default function Call(props) {4\n\n const myPeer = new Peer(undefined ,{\n    host:'/',\n    port:'3001'\n})\n\n\nconst myVideo = document.createElement('video')\nmyVideo.muted = true\n\nnavigator.mediaDevices.getUserMedia({\n\tvideo:true,\n\taudio:true\n}).then(stream =>{\n\taddVideoStream(myVideo , stream)\n\n\tmyPeer.on('call' , call =>{\n\t\tcall.answer(stream)\n\t\tconst video = document.createElement('video')\n\t\tcall.on('stream' , userVideoStream =>{\n\t\t\taddVideoStream(video , userVideoStream)\n\t\t})\n\t})\n\n\tsocket.on('user-connected' ,userId =>{\n\t\tconnectToNewUser(userId ,stream)\n\t})\n\n\tsocket.on('user-disconnected' ,userId =>{\n\t\tif(peers[userId]) peers[userId].close()\n\t})\n\t\n})\n\n myPeer.on('open' , id =>{\t\n \tsocket.emit('join-room',ROOM_ID , 10)\n })\n\n\nfunction connectToNewUser(userId ,stream) {\n\tconst call = myPeer.call(userId ,stream)\n\tconst video = document.createElement('video')\n\tcall.on('stream' , userVideoStream =>{\n\t\taddVideoStream(video , userVideoStream)\n\t})\n\tcall.on('close' ,()=>{\n\t\tvideo.remove()\n\t})\n}\n\n function addVideoStream(video , stream) {\n \tvideo.srcObject = stream\n \tvideo.addEventListener('loadedmetadata',() =>{\n \t\tvideo.play();\n \t})\n \tvideoGrid.append(video)\n }\n    return( \n        <div className=\"Call\">\n            <div className=\"wrapper fadeInDown\">\n                <div id=\"formContent\">\n                    <div id=\"video-grid\">\n\t\t\n                   </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}