{"ast":null,"code":"const Polling = require(\"./polling\");\n\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n    this.query = this.query || {}; // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    } // callback identifier\n\n\n    this.index = callbacks.length; // add callback to jsonp global\n\n    const self = this;\n    callbacks.push(function (msg) {\n      self.onData(msg);\n    }); // append to query string\n\n    this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n    if (typeof addEventListener === \"function\") {\n      addEventListener(\"beforeunload\", function () {\n        if (self.script) self.script.onerror = empty;\n      }, false);\n    }\n  }\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n\n\n  get supportsBinary() {\n    return false;\n  }\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n\n\n  doClose() {\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n\n\n  doPoll() {\n    const self = this;\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n\n    script.onerror = function (e) {\n      self.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n\n    this.script = script;\n    const isUAgecko = \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function () {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n\n\n  doWrite(data, fn) {\n    const self = this;\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = this.iframeId = \"eio_iframe_\" + this.index;\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    function initIframe() {\n      if (self.iframe) {\n        try {\n          self.form.removeChild(self.iframe);\n        } catch (e) {\n          self.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = self.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = self.iframeId;\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    }\n\n    initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = function () {\n        if (self.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n\n}\n\nmodule.exports = JSONPPolling;","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/node_modules/engine.io-client/lib/transports/polling-jsonp.js"],"names":["Polling","require","globalThis","rNewline","rEscapedNewline","callbacks","empty","JSONPPolling","constructor","opts","query","___eio","index","length","self","push","msg","onData","j","addEventListener","script","onerror","supportsBinary","doClose","parentNode","removeChild","form","iframe","doPoll","document","createElement","async","src","uri","e","onError","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","navigator","test","userAgent","setTimeout","doWrite","data","fn","area","id","iframeId","className","style","position","top","left","target","method","setAttribute","name","action","complete","initIframe","html","replace","value","submit","attachEvent","onreadystatechange","readyState","onload","module","exports"],"mappings":"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","sourcesContent":["const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty() {}\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    const self = this;\n    callbacks.push(function(msg) {\n      self.onData(msg);\n    });\n\n    // append to query string\n    this.query.j = this.index;\n\n    // prevent spurious errors from being emitted when the window is unloaded\n    if (typeof addEventListener === \"function\") {\n      addEventListener(\n        \"beforeunload\",\n        function() {\n          if (self.script) self.script.onerror = empty;\n        },\n        false\n      );\n    }\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const self = this;\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = function(e) {\n      self.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const self = this;\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    function initIframe() {\n      if (self.iframe) {\n        try {\n          self.form.removeChild(self.iframe);\n        } catch (e) {\n          self.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = self.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = self.iframeId;\n\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    }\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = function() {\n        if (self.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n"]},"metadata":{},"sourceType":"script"}