{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/Provider/PeerProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Peer from 'peerjs';\nconst PeerContext = /*#__PURE__*/React.createContext();\nexport function usePeer() {\n  _s();\n\n  return useContext(PeerContext);\n}\n\n_s(usePeer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function PeerProvider({\n  children\n}) {\n  const myPeer = \"\"; // new Peer(undefined ,{\n  //     host:'/',\n  //     port:'3002'\n  // })\n\n  return /*#__PURE__*/_jsxDEV(PeerContext.Provider, {\n    value: myPeer,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = PeerProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeerProvider\");","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/Provider/PeerProvider.js"],"names":["React","useContext","Peer","PeerContext","createContext","usePeer","PeerProvider","children","myPeer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAiBC,UAAjB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,SAAOJ,UAAU,CAACE,WAAD,CAAjB;AACH;;GAFeE,O;;AAIhB,OAAQ,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AAEvC,QAAMC,MAAM,GAAG,EAAf,CAFuC,CAGvC;AACA;AACA;AACA;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,MAA7B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAbgBD,Y","sourcesContent":["import React , { useContext } from 'react'\nimport Peer from 'peerjs'\n\nconst PeerContext = React.createContext()\n\nexport function usePeer(){\n    return useContext(PeerContext)\n}\n\nexport  function PeerProvider({ children}) {\n   \n    const myPeer = \"\"\n    // new Peer(undefined ,{\n    //     host:'/',\n    //     port:'3002'\n    // })\n\n    return (\n        <PeerContext.Provider value={myPeer}>\n            {children}\n        </PeerContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}