{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HandlersRegistry = void 0;\n\nclass HandlersRegistry {\n  constructor() {\n    this.handlers = new Map();\n  }\n\n  registerHandler(messageType, handler) {\n    if (this.handlers.has(messageType)) return;\n    this.handlers.set(messageType, handler);\n  }\n\n  handle(client, message) {\n    const {\n      type\n    } = message;\n    const handler = this.handlers.get(type);\n    if (!handler) return false;\n    return handler(client, message);\n  }\n\n}\n\nexports.HandlersRegistry = HandlersRegistry;","map":{"version":3,"sources":["/usr/local/lib/node_modules/peer/dist/src/messageHandler/handlersRegistry.js"],"names":["Object","defineProperty","exports","value","HandlersRegistry","constructor","handlers","Map","registerHandler","messageType","handler","has","set","handle","client","message","type","get"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMA,gBAAN,CAAuB;AACnBC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACH;;AACDC,EAAAA,eAAe,CAACC,WAAD,EAAcC,OAAd,EAAuB;AAClC,QAAI,KAAKJ,QAAL,CAAcK,GAAd,CAAkBF,WAAlB,CAAJ,EACI;AACJ,SAAKH,QAAL,CAAcM,GAAd,CAAkBH,WAAlB,EAA+BC,OAA/B;AACH;;AACDG,EAAAA,MAAM,CAACC,MAAD,EAASC,OAAT,EAAkB;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAWD,OAAjB;AACA,UAAML,OAAO,GAAG,KAAKJ,QAAL,CAAcW,GAAd,CAAkBD,IAAlB,CAAhB;AACA,QAAI,CAACN,OAAL,EACI,OAAO,KAAP;AACJ,WAAOA,OAAO,CAACI,MAAD,EAASC,OAAT,CAAd;AACH;;AAfkB;;AAiBvBb,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HandlersRegistry = void 0;\nclass HandlersRegistry {\n    constructor() {\n        this.handlers = new Map();\n    }\n    registerHandler(messageType, handler) {\n        if (this.handlers.has(messageType))\n            return;\n        this.handlers.set(messageType, handler);\n    }\n    handle(client, message) {\n        const { type } = message;\n        const handler = this.handlers.get(type);\n        if (!handler)\n            return false;\n        return handler(client, message);\n    }\n}\nexports.HandlersRegistry = HandlersRegistry;\n"]},"metadata":{},"sourceType":"script"}