{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthMiddleware = void 0;\n\nconst enums_1 = require(\"../../../enums\");\n\nclass AuthMiddleware {\n  constructor(config, realm) {\n    this.config = config;\n    this.realm = realm;\n\n    this.handle = (req, res, next) => {\n      const {\n        id,\n        token,\n        key\n      } = req.params;\n\n      if (key !== this.config.key) {\n        return res.status(401).send(enums_1.Errors.INVALID_KEY);\n      }\n\n      if (!id) {\n        return res.sendStatus(401);\n      }\n\n      const client = this.realm.getClientById(id);\n\n      if (!client) {\n        return res.sendStatus(401);\n      }\n\n      if (client.getToken() && token !== client.getToken()) {\n        return res.status(401).send(enums_1.Errors.INVALID_TOKEN);\n      }\n\n      next();\n    };\n  }\n\n}\n\nexports.AuthMiddleware = AuthMiddleware;","map":{"version":3,"sources":["/usr/local/lib/node_modules/peer/dist/src/api/middleware/auth/index.js"],"names":["Object","defineProperty","exports","value","AuthMiddleware","enums_1","require","constructor","config","realm","handle","req","res","next","id","token","key","params","status","send","Errors","INVALID_KEY","sendStatus","client","getClientById","getToken","INVALID_TOKEN"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,MAAMF,cAAN,CAAqB;AACjBG,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgB;AACvB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;;AACA,SAAKC,MAAL,GAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC9B,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA;AAAb,UAAqBL,GAAG,CAACM,MAA/B;;AACA,UAAID,GAAG,KAAK,KAAKR,MAAL,CAAYQ,GAAxB,EAA6B;AACzB,eAAOJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBd,OAAO,CAACe,MAAR,CAAeC,WAApC,CAAP;AACH;;AACD,UAAI,CAACP,EAAL,EAAS;AACL,eAAOF,GAAG,CAACU,UAAJ,CAAe,GAAf,CAAP;AACH;;AACD,YAAMC,MAAM,GAAG,KAAKd,KAAL,CAAWe,aAAX,CAAyBV,EAAzB,CAAf;;AACA,UAAI,CAACS,MAAL,EAAa;AACT,eAAOX,GAAG,CAACU,UAAJ,CAAe,GAAf,CAAP;AACH;;AACD,UAAIC,MAAM,CAACE,QAAP,MAAqBV,KAAK,KAAKQ,MAAM,CAACE,QAAP,EAAnC,EAAsD;AAClD,eAAOb,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBd,OAAO,CAACe,MAAR,CAAeM,aAApC,CAAP;AACH;;AACDb,MAAAA,IAAI;AACP,KAhBD;AAiBH;;AArBgB;;AAuBrBX,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthMiddleware = void 0;\nconst enums_1 = require(\"../../../enums\");\nclass AuthMiddleware {\n    constructor(config, realm) {\n        this.config = config;\n        this.realm = realm;\n        this.handle = (req, res, next) => {\n            const { id, token, key } = req.params;\n            if (key !== this.config.key) {\n                return res.status(401).send(enums_1.Errors.INVALID_KEY);\n            }\n            if (!id) {\n                return res.sendStatus(401);\n            }\n            const client = this.realm.getClientById(id);\n            if (!client) {\n                return res.sendStatus(401);\n            }\n            if (client.getToken() && token !== client.getToken()) {\n                return res.status(401).send(enums_1.Errors.INVALID_TOKEN);\n            }\n            next();\n        };\n    }\n}\nexports.AuthMiddleware = AuthMiddleware;\n"]},"metadata":{},"sourceType":"script"}