{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './Style/App.css';\nimport Home from './Component/Home';\nimport React from 'react';\nimport { useSocket } from './Provider/SocketProvider';\nimport IDStorage from \"./Storage/IDStorage\";\nimport SessionStorage from \"./Storage/SessionStorage\";\nimport Call from './Component/Call';\nexport default function App() {\n  _s();\n\n  const socket = useSocket();\n  const [display, setDisplay] = SessionStorage('display', 'Home');\n  const [roomID, setRoomID] = SessionStorage('roomID', '');\n  const [ID, setID] = IDStorage('ID', '');\n  /* ///////////////////////////////////////////////////////////////// */\n\n  socket.addEventListener('message', event => {\n    const messageObj = JSON.parse(event.data);\n\n    switch (messageObj.type) {\n      case 'Add-success':\n        setID(messageObj.data);\n        break;\n\n      case 'set-display':\n        setDisplay(messageObj.data);\n        break;\n\n      case 'set-roomID':\n        setRoomID(messageObj.data);\n        break;\n\n      default:\n        break;\n    }\n  });\n  socket.addEventListener('open', event => {\n    socket.send(JSON.stringify({\n      type: 'refresh-user',\n      data: [localStorage.getItem('Anonymous-Chat-id'), window.sessionStorage.getItem('Anonymous-Chat-display'), window.sessionStorage.getItem('Anonymous-Chat-roomID')]\n    }));\n  });\n  /* ///////////////////////////////////////////////////////////////// */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: display === \"Home\" ? /*#__PURE__*/_jsxDEV(Home, {\n      socket: socket,\n      ID: ID,\n      setDisplay: setDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Call, {\n      roomID: roomID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 66\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"M7tPoqcNtrUaC4IP/ioAcOubdrc=\", false, function () {\n  return [useSocket];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/App.js"],"names":["Home","React","useSocket","IDStorage","SessionStorage","Call","App","socket","display","setDisplay","roomID","setRoomID","ID","setID","addEventListener","event","messageObj","JSON","parse","data","type","send","stringify","localStorage","getItem","window","sessionStorage"],"mappings":";;;;;AAAA,OAAO,iBAAP;AACA,OAAOA,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,OAAD,EAAWC,UAAX,IAA0BL,cAAc,CAAC,SAAD,EAAW,MAAX,CAA9C;AACA,QAAM,CAACM,MAAD,EAAUC,SAAV,IAAwBP,cAAc,CAAC,QAAD,EAAU,EAAV,CAA5C;AACA,QAAM,CAACQ,EAAD,EAAMC,KAAN,IAAeV,SAAS,CAAC,IAAD,EAAQ,EAAR,CAA9B;AAEF;;AAEEI,EAAAA,MAAM,CAACO,gBAAP,CAAwB,SAAxB,EAAoCC,KAAK,IAAG;AAC1C,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAnB;;AACA,YAAQH,UAAU,CAACI,IAAnB;AACE,WAAK,aAAL;AACIP,QAAAA,KAAK,CAACG,UAAU,CAACG,IAAZ,CAAL;AACA;;AACJ,WAAK,aAAL;AACEV,QAAAA,UAAU,CAACO,UAAU,CAACG,IAAZ,CAAV;AACA;;AACF,WAAK,YAAL;AACIR,QAAAA,SAAS,CAACK,UAAU,CAACG,IAAZ,CAAT;AACA;;AACJ;AACE;AAXJ;AAaD,GAfD;AAiBAZ,EAAAA,MAAM,CAACO,gBAAP,CAAwB,MAAxB,EAAiCC,KAAK,IAAG;AACvCR,IAAAA,MAAM,CAACc,IAAP,CAAYJ,IAAI,CAACK,SAAL,CAAe;AACvBF,MAAAA,IAAI,EAAC,cADkB;AAEvBD,MAAAA,IAAI,EAAC,CACHI,YAAY,CAACC,OAAb,CAAqB,mBAArB,CADG,EAEHC,MAAM,CAACC,cAAP,CAAsBF,OAAtB,CAA8B,wBAA9B,CAFG,EAGHC,MAAM,CAACC,cAAP,CAAsBF,OAAtB,CAA8B,uBAA9B,CAHG;AAFkB,KAAf,CAAZ;AAQD,GATD;AAWF;;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACIhB,OAAO,KAAK,MAAZ,gBACA,QAAC,IAAD;AAAM,MAAA,MAAM,EAAED,MAAd;AAAsB,MAAA,EAAE,EAAEK,EAA1B;AAA8B,MAAA,UAAU,EAAEH;AAA1C;AAAA;AAAA;AAAA;AAAA,YADA,gBACyD,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEC;AAAd;AAAA;AAAA;AAAA;AAAA;AAF7D;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7CuBJ,G;UAEPJ,S;;;KAFOI,G","sourcesContent":["import './Style/App.css';\nimport Home from './Component/Home';\nimport React from 'react';\nimport {useSocket} from './Provider/SocketProvider'\nimport IDStorage from \"./Storage/IDStorage\";\nimport SessionStorage from \"./Storage/SessionStorage\"\nimport Call from './Component/Call'\n\nexport default function App() {\n \n  const socket = useSocket();\n  const [display , setDisplay ] = SessionStorage('display','Home');\n  const [roomID , setRoomID ] = SessionStorage('roomID','');\n  const [ID , setID] = IDStorage('ID' , '')\n\n/* ///////////////////////////////////////////////////////////////// */\n\n  socket.addEventListener('message' , event =>{\n    const messageObj = JSON.parse(event.data)\n    switch (messageObj.type) {\n      case 'Add-success':\n          setID(messageObj.data)\n          break\n      case 'set-display':\n        setDisplay(messageObj.data)\n        break\n      case 'set-roomID':\n          setRoomID(messageObj.data)\n          break\n      default:\n        break\n    }\n  })\n\n  socket.addEventListener('open' , event =>{\n    socket.send(JSON.stringify({\n        type:'refresh-user',\n        data:[\n          localStorage.getItem('Anonymous-Chat-id') ,\n          window.sessionStorage.getItem('Anonymous-Chat-display'),\n          window.sessionStorage.getItem('Anonymous-Chat-roomID')\n        ]\n    }))\n  })\n  \n/* ///////////////////////////////////////////////////////////////// */\n  return (\n    <div className=\"App\">\n      { display === \"Home\"?\n        <Home socket={socket} ID={ID} setDisplay={setDisplay} />:<Call roomID={roomID} />\n      }\n   </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}