{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './Style/App.css';\nimport Home from './Component/Home';\nimport React, { useState, useEffect } from 'react';\nimport { useSocket } from './Provider/SocketProvider';\nimport IDStorage from \"./Storage/IDStorage\";\nimport SessionStorage from \"./Storage/SessionStorage\";\nimport Call from './Component/Call';\nimport Alert from './Component/Alert';\nimport Message from './Component/Message';\nimport { usePeer } from './Provider/PeerProvider';\nexport default function App() {\n  _s();\n\n  const socket = useSocket();\n  const myPeer = usePeer();\n  const [display, setDisplay] = SessionStorage('display', 'Home');\n  const [roomID, setRoomID] = SessionStorage('roomID', '');\n  const [peerID, setPeerID] = SessionStorage('PeerID', '');\n  const [chatLog, setChatLog] = SessionStorage('chatLog', \"\");\n  const [ID, setID] = IDStorage('ID', 'undefined');\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    window.sessionStorage.setItem(\"Anonymous-Chat-chatLog\", chatLog);\n  }, [chatLog]);\n  useEffect(() => {\n    window.sessionStorage.setItem(\"Anonymous-Chat-PeerID\", peerID);\n  }, [peerID]);\n  myPeer.on('open', id => {\n    setPeerID(id);\n  });\n  /* ///////////////////////////////////////////////////////////////// */\n\n  socket.addEventListener('message', event => {\n    const messageObj = JSON.parse(event.data);\n\n    switch (messageObj.type) {\n      case 'Add-Success':\n        setID(messageObj.data);\n        break;\n\n      case 'Set-Display':\n        setDisplay(messageObj.data);\n        break;\n\n      case 'Set-RoomID':\n        setRoomID(messageObj.data);\n        break;\n\n      case 'Set-ChatLog':\n        setChatLog(messageObj.data);\n        break;\n\n      case 'Set-PeerID':\n        setPeerID(messageObj.data);\n        break;\n      /////////////////////////////////////////////////////////\n\n      case 'Double-ID-Valid':\n        setMessage(\"You already have ID\");\n        break;\n\n      case 'ID-Not-Valid':\n        setMessage(\"You must have ID befor get in a room\");\n        break;\n\n      case 'Room-NotEmpty-Valid':\n        setMessage(\"Sorry, Room is Full\");\n        break;\n\n      case 'RoomID-Not-Valid':\n        setMessage(\"Sorry, RoomID is Wrong\");\n        break;\n\n      case 'user-disconnected':\n        console.log(1111);\n        myPeer.destroy();\n        break;\n    }\n  });\n  socket.addEventListener('open', event => {\n    socket.send(JSON.stringify({\n      type: 'Refresh-Client',\n      data: [localStorage.getItem('Anonymous-Chat-ID'), window.sessionStorage.getItem('Anonymous-Chat-display'), window.sessionStorage.getItem('Anonymous-Chat-roomID'), window.sessionStorage.getItem('Anonymous-Chat-peerID')]\n    }));\n  });\n  /* ///////////////////////////////////////////////////////////////// */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [message !== \"\" ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: message,\n      setMessage: setMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this) : '', display === \"Message\" ? /*#__PURE__*/_jsxDEV(Message, {\n      socket: socket,\n      ID: ID,\n      setDisplay: setDisplay,\n      roomID: roomID,\n      chatLog: chatLog,\n      setChatLog: setChatLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this) : display === \"Call\" ? /*#__PURE__*/_jsxDEV(Call, {\n      myPeer: myPeer,\n      setDisplay: setDisplay,\n      ID: ID,\n      socket: socket,\n      roomID: roomID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(Home, {\n      socket: socket,\n      peerID: peerID,\n      ID: ID,\n      setDisplay: setDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5caGu+MhE09O1+mzAU9iCQPa4R0=\", false, function () {\n  return [useSocket, usePeer];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/App.js"],"names":["Home","React","useState","useEffect","useSocket","IDStorage","SessionStorage","Call","Alert","Message","usePeer","App","socket","myPeer","display","setDisplay","roomID","setRoomID","peerID","setPeerID","chatLog","setChatLog","ID","setID","message","setMessage","window","sessionStorage","setItem","on","id","addEventListener","event","messageObj","JSON","parse","data","type","console","log","destroy","send","stringify","localStorage","getItem"],"mappings":"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","sourcesContent":["import './Style/App.css';\nimport Home from './Component/Home';\nimport React, { useState , useEffect } from 'react';\nimport {useSocket} from './Provider/SocketProvider'\nimport IDStorage from \"./Storage/IDStorage\";\nimport SessionStorage from \"./Storage/SessionStorage\"\nimport Call from './Component/Call'\nimport Alert from './Component/Alert'\nimport Message from './Component/Message'\nimport {usePeer} from './Provider/PeerProvider'\n\nexport default function App() {\n \n  const socket = useSocket()\n  const myPeer = usePeer()\n  \n  const [display , setDisplay ] = SessionStorage('display','Home')\n  const [roomID , setRoomID ] = SessionStorage('roomID','')\n  const [peerID , setPeerID ] = SessionStorage('PeerID','')\n  const [chatLog , setChatLog]  = SessionStorage('chatLog' , \"\")\n  const [ID , setID] = IDStorage('ID' ,  'undefined')\n  const [message , setMessage] = useState(\"\")\n\n  useEffect(() => {\n    window.sessionStorage.setItem(\"Anonymous-Chat-chatLog\" , (chatLog))\n  } , [chatLog])\n\n  useEffect(() => {\n    window.sessionStorage.setItem(\"Anonymous-Chat-PeerID\" , (peerID))\n  } , [peerID])\n\n  myPeer.on('open' , id=>{\n\t\tsetPeerID(id)\n\t})\n\n/* ///////////////////////////////////////////////////////////////// */\n\n  socket.addEventListener('message' , event =>{\n    const messageObj = JSON.parse(event.data)\n    switch (messageObj.type) {\n      case 'Add-Success':\n        setID(messageObj.data)\n        break\n      case 'Set-Display':\n        setDisplay(messageObj.data)\n        break\n      case 'Set-RoomID':\n        setRoomID(messageObj.data)\n        break\n      case 'Set-ChatLog':\n        setChatLog(messageObj.data)\n        break\n      case 'Set-PeerID':\n        setPeerID(messageObj.data)\n        break\n      /////////////////////////////////////////////////////////\n      case 'Double-ID-Valid':\n        setMessage(\"You already have ID\")\n        break\n      case 'ID-Not-Valid':\n        setMessage(\"You must have ID befor get in a room\")\n        break\n      case 'Room-NotEmpty-Valid':\n        setMessage(\"Sorry, Room is Full\")\n        break\n      case 'RoomID-Not-Valid':\n        setMessage(\"Sorry, RoomID is Wrong\")\n        break\n      case  'user-disconnected':\n        console.log(1111)\n        myPeer.destroy()\n        break\n    }\n  })\n\n  socket.addEventListener('open' , event =>{\n    socket.send(JSON.stringify({\n        type:'Refresh-Client',\n        data:[\n          localStorage.getItem('Anonymous-Chat-ID') ,\n          window.sessionStorage.getItem('Anonymous-Chat-display'),\n          window.sessionStorage.getItem('Anonymous-Chat-roomID'),\n          window.sessionStorage.getItem('Anonymous-Chat-peerID')\n        ]\n    }))\n  })\n  \n/* ///////////////////////////////////////////////////////////////// */\n  return (\n    <div className=\"App\">\n      { message !== \"\"? <Alert message={message} setMessage={setMessage}/>:'' }\n      { display === \"Message\"?\n          <Message socket={socket} ID={ID} setDisplay={setDisplay} roomID={roomID} chatLog={chatLog} setChatLog={setChatLog}/>:\n          display === \"Call\"?\n           <Call myPeer={myPeer} setDisplay={setDisplay} ID={ID} socket={socket} roomID={roomID} />:\n            <Home socket={socket} peerID={peerID} ID={ID} setDisplay={setDisplay} /> \n     }\n   </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}