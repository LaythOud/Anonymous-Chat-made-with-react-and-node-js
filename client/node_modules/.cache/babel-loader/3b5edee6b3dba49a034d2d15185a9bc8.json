{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageHandler = void 0;\n\nconst enums_1 = require(\"../enums\");\n\nconst handlers_1 = require(\"./handlers\");\n\nconst handlersRegistry_1 = require(\"./handlersRegistry\");\n\nclass MessageHandler {\n  constructor(realm, handlersRegistry = new handlersRegistry_1.HandlersRegistry()) {\n    this.handlersRegistry = handlersRegistry;\n    const transmissionHandler = handlers_1.TransmissionHandler({\n      realm\n    });\n    const heartbeatHandler = handlers_1.HeartbeatHandler;\n\n    const handleTransmission = (client, {\n      type,\n      src,\n      dst,\n      payload\n    }) => {\n      return transmissionHandler(client, {\n        type,\n        src,\n        dst,\n        payload\n      });\n    };\n\n    const handleHeartbeat = (client, message) => heartbeatHandler(client, message);\n\n    this.handlersRegistry.registerHandler(enums_1.MessageType.HEARTBEAT, handleHeartbeat);\n    this.handlersRegistry.registerHandler(enums_1.MessageType.OFFER, handleTransmission);\n    this.handlersRegistry.registerHandler(enums_1.MessageType.ANSWER, handleTransmission);\n    this.handlersRegistry.registerHandler(enums_1.MessageType.CANDIDATE, handleTransmission);\n    this.handlersRegistry.registerHandler(enums_1.MessageType.LEAVE, handleTransmission);\n    this.handlersRegistry.registerHandler(enums_1.MessageType.EXPIRE, handleTransmission);\n  }\n\n  handle(client, message) {\n    return this.handlersRegistry.handle(client, message);\n  }\n\n}\n\nexports.MessageHandler = MessageHandler;","map":{"version":3,"sources":["/usr/local/lib/node_modules/peer/dist/src/messageHandler/index.js"],"names":["Object","defineProperty","exports","value","MessageHandler","enums_1","require","handlers_1","handlersRegistry_1","constructor","realm","handlersRegistry","HandlersRegistry","transmissionHandler","TransmissionHandler","heartbeatHandler","HeartbeatHandler","handleTransmission","client","type","src","dst","payload","handleHeartbeat","message","registerHandler","MessageType","HEARTBEAT","OFFER","ANSWER","CANDIDATE","LEAVE","EXPIRE","handle"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAME,kBAAkB,GAAGF,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAMF,cAAN,CAAqB;AACjBK,EAAAA,WAAW,CAACC,KAAD,EAAQC,gBAAgB,GAAG,IAAIH,kBAAkB,CAACI,gBAAvB,EAA3B,EAAsE;AAC7E,SAAKD,gBAAL,GAAwBA,gBAAxB;AACA,UAAME,mBAAmB,GAAGN,UAAU,CAACO,mBAAX,CAA+B;AAAEJ,MAAAA;AAAF,KAA/B,CAA5B;AACA,UAAMK,gBAAgB,GAAGR,UAAU,CAACS,gBAApC;;AACA,UAAMC,kBAAkB,GAAG,CAACC,MAAD,EAAS;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,GAAb;AAAkBC,MAAAA;AAAlB,KAAT,KAAyC;AAChE,aAAOT,mBAAmB,CAACK,MAAD,EAAS;AAC/BC,QAAAA,IAD+B;AAE/BC,QAAAA,GAF+B;AAG/BC,QAAAA,GAH+B;AAI/BC,QAAAA;AAJ+B,OAAT,CAA1B;AAMH,KAPD;;AAQA,UAAMC,eAAe,GAAG,CAACL,MAAD,EAASM,OAAT,KAAqBT,gBAAgB,CAACG,MAAD,EAASM,OAAT,CAA7D;;AACA,SAAKb,gBAAL,CAAsBc,eAAtB,CAAsCpB,OAAO,CAACqB,WAAR,CAAoBC,SAA1D,EAAqEJ,eAArE;AACA,SAAKZ,gBAAL,CAAsBc,eAAtB,CAAsCpB,OAAO,CAACqB,WAAR,CAAoBE,KAA1D,EAAiEX,kBAAjE;AACA,SAAKN,gBAAL,CAAsBc,eAAtB,CAAsCpB,OAAO,CAACqB,WAAR,CAAoBG,MAA1D,EAAkEZ,kBAAlE;AACA,SAAKN,gBAAL,CAAsBc,eAAtB,CAAsCpB,OAAO,CAACqB,WAAR,CAAoBI,SAA1D,EAAqEb,kBAArE;AACA,SAAKN,gBAAL,CAAsBc,eAAtB,CAAsCpB,OAAO,CAACqB,WAAR,CAAoBK,KAA1D,EAAiEd,kBAAjE;AACA,SAAKN,gBAAL,CAAsBc,eAAtB,CAAsCpB,OAAO,CAACqB,WAAR,CAAoBM,MAA1D,EAAkEf,kBAAlE;AACH;;AACDgB,EAAAA,MAAM,CAACf,MAAD,EAASM,OAAT,EAAkB;AACpB,WAAO,KAAKb,gBAAL,CAAsBsB,MAAtB,CAA6Bf,MAA7B,EAAqCM,OAArC,CAAP;AACH;;AAvBgB;;AAyBrBtB,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageHandler = void 0;\nconst enums_1 = require(\"../enums\");\nconst handlers_1 = require(\"./handlers\");\nconst handlersRegistry_1 = require(\"./handlersRegistry\");\nclass MessageHandler {\n    constructor(realm, handlersRegistry = new handlersRegistry_1.HandlersRegistry()) {\n        this.handlersRegistry = handlersRegistry;\n        const transmissionHandler = handlers_1.TransmissionHandler({ realm });\n        const heartbeatHandler = handlers_1.HeartbeatHandler;\n        const handleTransmission = (client, { type, src, dst, payload }) => {\n            return transmissionHandler(client, {\n                type,\n                src,\n                dst,\n                payload,\n            });\n        };\n        const handleHeartbeat = (client, message) => heartbeatHandler(client, message);\n        this.handlersRegistry.registerHandler(enums_1.MessageType.HEARTBEAT, handleHeartbeat);\n        this.handlersRegistry.registerHandler(enums_1.MessageType.OFFER, handleTransmission);\n        this.handlersRegistry.registerHandler(enums_1.MessageType.ANSWER, handleTransmission);\n        this.handlersRegistry.registerHandler(enums_1.MessageType.CANDIDATE, handleTransmission);\n        this.handlersRegistry.registerHandler(enums_1.MessageType.LEAVE, handleTransmission);\n        this.handlersRegistry.registerHandler(enums_1.MessageType.EXPIRE, handleTransmission);\n    }\n    handle(client, message) {\n        return this.handlersRegistry.handle(client, message);\n    }\n}\nexports.MessageHandler = MessageHandler;\n"]},"metadata":{},"sourceType":"script"}