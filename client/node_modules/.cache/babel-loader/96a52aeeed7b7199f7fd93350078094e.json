{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './Style/App.css';\nimport Home from './Component/Home';\nimport React, { useState } from 'react';\nimport { useSocket } from './Provider/SocketProvider';\nimport IDStorage from \"./Storage/IDStorage\";\nimport SessionStorage from \"./Storage/SessionStorage\";\nexport default function App() {\n  _s();\n\n  const socket = useSocket();\n  const [display, setDisplay] = SessionStorage('dis', 'Home');\n  const [ID, setID] = IDStorage('ID', '');\n  /* ///////////////////////////////////////////////////////////////// */\n\n  socket.addEventListener('message', event => {\n    const messageObj = JSON.parse(event.data);\n\n    switch (messageObj.type) {\n      case 'Add-success':\n        setID(messageObj.data);\n        break;\n\n      default:\n        break;\n    }\n  });\n  socket.addEventListener('open', event => {\n    socket.send(JSON.stringify({\n      type: 'refresh-user',\n      data: [localStorage.getItem('Secrat-Chat-id'), window.sessionStorage.getItem('Secrat-Chat-dis')]\n    }));\n  });\n  /* ///////////////////////////////////////////////////////////////// */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: display === \"Home\" ? /*#__PURE__*/_jsxDEV(Home, {\n      socket: socket,\n      ID: ID,\n      setDisplay: setDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"M7tPoqcNtrUaC4IP/ioAcOubdrc=\", false, function () {\n  return [useSocket];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/App.js"],"names":["Home","React","useState","useSocket","IDStorage","SessionStorage","App","socket","display","setDisplay","ID","setID","addEventListener","event","messageObj","JSON","parse","data","type","send","stringify","localStorage","getItem","window","sessionStorage"],"mappings":";;;;;AAAA,OAAO,iBAAP;AACA,OAAOA,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,SAAR,QAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM,CAACK,OAAD,EAAWC,UAAX,IAA0BJ,cAAc,CAAC,KAAD,EAAO,MAAP,CAA9C;AACA,QAAM,CAACK,EAAD,EAAMC,KAAN,IAAeP,SAAS,CAAC,IAAD,EAAQ,EAAR,CAA9B;AAEF;;AAEEG,EAAAA,MAAM,CAACK,gBAAP,CAAwB,SAAxB,EAAoCC,KAAK,IAAG;AAC1C,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAnB;;AACA,YAAQH,UAAU,CAACI,IAAnB;AACE,WAAK,aAAL;AACIP,QAAAA,KAAK,CAACG,UAAU,CAACG,IAAZ,CAAL;AACA;;AACJ;AACE;AALJ;AAOD,GATD;AAWAV,EAAAA,MAAM,CAACK,gBAAP,CAAwB,MAAxB,EAAiCC,KAAK,IAAG;AACvCN,IAAAA,MAAM,CAACY,IAAP,CAAYJ,IAAI,CAACK,SAAL,CAAe;AACvBF,MAAAA,IAAI,EAAC,cADkB;AAEvBD,MAAAA,IAAI,EAAC,CACHI,YAAY,CAACC,OAAb,CAAqB,gBAArB,CADG,EAEHC,MAAM,CAACC,cAAP,CAAsBF,OAAtB,CAA8B,iBAA9B,CAFG;AAFkB,KAAf,CAAZ;AAOD,GARD;AAUF;;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACId,OAAO,KAAK,MAAZ,gBACA,QAAC,IAAD;AAAM,MAAA,MAAM,EAAED,MAAd;AAAsB,MAAA,EAAE,EAAEG,EAA1B;AAA8B,MAAA,UAAU,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,YADA,GACyD;AAF7D;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArCuBH,G;UAEPH,S;;;KAFOG,G","sourcesContent":["import './Style/App.css';\nimport Home from './Component/Home';\nimport React, { useState } from 'react';\nimport {useSocket} from './Provider/SocketProvider'\nimport IDStorage from \"./Storage/IDStorage\";\nimport SessionStorage from \"./Storage/SessionStorage\"\n\nexport default function App() {\n \n  const socket = useSocket();\n  const [display , setDisplay ] = SessionStorage('dis','Home');\n  const [ID , setID] = IDStorage('ID' , '')\n\n/* ///////////////////////////////////////////////////////////////// */\n\n  socket.addEventListener('message' , event =>{\n    const messageObj = JSON.parse(event.data)\n    switch (messageObj.type) {\n      case 'Add-success':\n          setID(messageObj.data)\n          break\n      default:\n        break;\n    }\n  })\n\n  socket.addEventListener('open' , event =>{\n    socket.send(JSON.stringify({\n        type:'refresh-user',\n        data:[\n          localStorage.getItem('Secrat-Chat-id') ,\n          window.sessionStorage.getItem('Secrat-Chat-dis')\n        ]\n    }))\n  })\n  \n/* ///////////////////////////////////////////////////////////////// */\n  return (\n    <div className=\"App\">\n      { display === \"Home\"?\n        <Home socket={socket} ID={ID} setDisplay={setDisplay} />:''\n      }\n   </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}