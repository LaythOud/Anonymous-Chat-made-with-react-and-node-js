{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/Component/Call.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function Call(props) {\n  _s();\n\n  const videoGrid = document.getElementById('video-grid');\n  const [streamClient, setStreamClient] = useState();\n  const [peer, setPeer] = useState();\n  const myPeer = new Peer(undefined, {\n    host: '/',\n    port: '3001'\n  });\n  const myVideo = document.createElement('video');\n  myVideo.muted = true;\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true\n  }).then(stream => {\n    addVideoStream(myVideo, stream);\n    setStreamClient(stream);\n    myPeer.on('call', call => {\n      call.answer(stream);\n      const video = document.createElement('video');\n      call.on('stream', userVideoStream => {\n        addVideoStream(video, userVideoStream);\n      });\n    });\n  });\n  myPeer.on('open', ID => {\n    socket.send(JSON.stringify({\n      type: 'join-room',\n      data: [props.roomID, props.ID]\n    }));\n  });\n\n  function connectToNewUser(userId, stream) {\n    const call = myPeer.call(userId, stream);\n    const video = document.createElement('video');\n    call.on('stream', userVideoStream => {\n      addVideoStream(video, userVideoStream);\n    });\n    call.on('close', () => {\n      video.remove();\n    });\n    setPeer(call);\n  }\n\n  function addVideoStream(video, stream) {\n    video.srcObject = stream;\n    video.addEventListener('loadedmetadata', () => {\n      video.play();\n    });\n    videoGrid.append(video);\n  }\n\n  socket.addEventListener('message', event => {\n    const messageObj = JSON.parse(event.data);\n\n    switch (messageObj.type) {\n      case 'user-connected':\n        connectToNewUser(messageObj.data, streamClient);\n        break;\n\n      case 'user-disconnected':\n        if (peers) peers.close();\n        break;\n\n      default:\n        break;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Call\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper fadeInDown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"formContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"video-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Call, \"PleBH3HFBlVgdcIEvzh9ox+0TOg=\");\n\n_c = Call;\n\nvar _c;\n\n$RefreshReg$(_c, \"Call\");","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/src/Component/Call.js"],"names":["React","useState","Call","props","videoGrid","document","getElementById","streamClient","setStreamClient","peer","setPeer","myPeer","Peer","undefined","host","port","myVideo","createElement","muted","navigator","mediaDevices","getUserMedia","video","audio","then","stream","addVideoStream","on","call","answer","userVideoStream","ID","socket","send","JSON","stringify","type","data","roomID","connectToNewUser","userId","remove","srcObject","addEventListener","play","append","event","messageObj","parse","peers","close"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Call(props) {\n\n\n const videoGrid = document.getElementById('video-grid')\n const [streamClient , setStreamClient] = useState()\n const [peer , setPeer] = useState()\n\n const myPeer = new Peer(undefined ,{\n    host:'/',\n    port:'3001'\n})\n\n\nconst myVideo = document.createElement('video')\nmyVideo.muted = true\n\nnavigator.mediaDevices.getUserMedia({\n\tvideo:true,\n\taudio:true\n}).then(stream =>{\n\taddVideoStream(myVideo , stream)\n    \n    setStreamClient(stream)\n\n\tmyPeer.on('call' , call =>{\n\t\tcall.answer(stream)\n\t\tconst video = document.createElement('video')\n\t\tcall.on('stream' , userVideoStream =>{\n\t\t\taddVideoStream(video , userVideoStream)\n\t\t})\n\t})\n\t\n})\n\n myPeer.on('open' , ID =>{\t\n    socket.send(JSON.stringify({\n        type:'join-room',\n        data:[props.roomID , props.ID]\n    }))\n })\n\n\nfunction connectToNewUser(userId ,stream) {\n\tconst call = myPeer.call(userId ,stream)\n\tconst video = document.createElement('video')\n\tcall.on('stream' , userVideoStream =>{\n\t\taddVideoStream(video , userVideoStream)\n\t})\n\tcall.on('close' ,()=>{\n\t\tvideo.remove()\n    })\n    setPeer(call)\n}\n\n function addVideoStream(video , stream) {\n \tvideo.srcObject = stream\n \tvideo.addEventListener('loadedmetadata',() =>{\n \t\tvideo.play();\n \t})\n \tvideoGrid.append(video)\n }\n\n\n socket.addEventListener('message' , event =>{\n    const messageObj = JSON.parse(event.data)\n    switch (messageObj.type) {\n        case 'user-connected':\n            connectToNewUser(messageObj.data ,streamClient)\n            break\n        case 'user-disconnected':\n            if(peers) peers.close()\n            break\n        default:\n            break\n    }\n})\n    return( \n        <div className=\"Call\">\n            <div className=\"wrapper fadeInDown\">\n                <div id=\"formContent\">\n                    <div id=\"video-grid\">\n\t\t\n                   </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}