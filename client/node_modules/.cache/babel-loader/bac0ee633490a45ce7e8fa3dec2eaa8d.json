{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Socket = exports.io = exports.Manager = exports.protocol = void 0;\n\nconst url_1 = require(\"./url\");\n\nconst manager_1 = require(\"./manager\");\n\nconst socket_1 = require(\"./socket\");\n\nObject.defineProperty(exports, \"Socket\", {\n  enumerable: true,\n  get: function () {\n    return socket_1.Socket;\n  }\n});\n\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nconst cache = exports.managers = {};\n\nfunction lookup(uri, opts) {\n  if (typeof uri === \"object\") {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  const parsed = url_1.url(uri);\n  const source = parsed.source;\n  const id = parsed.id;\n  const path = parsed.path;\n  const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n  const newConnection = opts.forceNew || opts[\"force new connection\"] || false === opts.multiplex || sameNamespace;\n  let io;\n\n  if (newConnection) {\n    debug(\"ignoring socket cache for %s\", source);\n    io = new manager_1.Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug(\"new io instance for %s\", source);\n      cache[id] = new manager_1.Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\n\nvar socket_io_parser_1 = require(\"socket.io-parser\");\n\nObject.defineProperty(exports, \"protocol\", {\n  enumerable: true,\n  get: function () {\n    return socket_io_parser_1.protocol;\n  }\n});\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\n\nvar manager_2 = require(\"./manager\");\n\nObject.defineProperty(exports, \"Manager\", {\n  enumerable: true,\n  get: function () {\n    return manager_2.Manager;\n  }\n});","map":{"version":3,"sources":["/media/lizard/02d10dea-b08f-45b8-a5ad-a36d5f9f2e04/lizard/WEB/PROJECT/Anonymous-Chat/client/node_modules/socket.io-client/build/index.js"],"names":["Object","defineProperty","exports","value","Socket","io","Manager","protocol","url_1","require","manager_1","socket_1","enumerable","get","debug","module","lookup","cache","managers","uri","opts","undefined","parsed","url","source","id","path","sameNamespace","newConnection","forceNew","multiplex","query","socket","socket_io_parser_1","connect","manager_2"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,EAAR,GAAaH,OAAO,CAACI,OAAR,GAAkBJ,OAAO,CAACK,QAAR,GAAmB,KAAK,CAAxE;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACAT,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,QAA/B,EAAyC;AAAEU,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOF,QAAQ,CAACP,MAAhB;AAAyB;AAAhE,CAAzC;;AACA,MAAMU,KAAK,GAAGL,OAAO,CAAC,OAAD,CAAP,CAAiB,kBAAjB,CAAd;AACA;AACA;AACA;;;AACAM,MAAM,CAACb,OAAP,GAAiBA,OAAO,GAAGc,MAA3B;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAIf,OAAO,CAACgB,QAAR,GAAmB,EAAlC;;AACA,SAASF,MAAT,CAAgBG,GAAhB,EAAqBC,IAArB,EAA2B;AACvB,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AACzBC,IAAAA,IAAI,GAAGD,GAAP;AACAA,IAAAA,GAAG,GAAGE,SAAN;AACH;;AACDD,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,QAAME,MAAM,GAAGd,KAAK,CAACe,GAAN,CAAUJ,GAAV,CAAf;AACA,QAAMK,MAAM,GAAGF,MAAM,CAACE,MAAtB;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAlB;AACA,QAAMC,IAAI,GAAGJ,MAAM,CAACI,IAApB;AACA,QAAMC,aAAa,GAAGV,KAAK,CAACQ,EAAD,CAAL,IAAaC,IAAI,IAAIT,KAAK,CAACQ,EAAD,CAAL,CAAU,MAAV,CAA3C;AACA,QAAMG,aAAa,GAAGR,IAAI,CAACS,QAAL,IAClBT,IAAI,CAAC,sBAAD,CADc,IAElB,UAAUA,IAAI,CAACU,SAFG,IAGlBH,aAHJ;AAIA,MAAItB,EAAJ;;AACA,MAAIuB,aAAJ,EAAmB;AACfd,IAAAA,KAAK,CAAC,8BAAD,EAAiCU,MAAjC,CAAL;AACAnB,IAAAA,EAAE,GAAG,IAAIK,SAAS,CAACJ,OAAd,CAAsBkB,MAAtB,EAA8BJ,IAA9B,CAAL;AACH,GAHD,MAIK;AACD,QAAI,CAACH,KAAK,CAACQ,EAAD,CAAV,EAAgB;AACZX,MAAAA,KAAK,CAAC,wBAAD,EAA2BU,MAA3B,CAAL;AACAP,MAAAA,KAAK,CAACQ,EAAD,CAAL,GAAY,IAAIf,SAAS,CAACJ,OAAd,CAAsBkB,MAAtB,EAA8BJ,IAA9B,CAAZ;AACH;;AACDf,IAAAA,EAAE,GAAGY,KAAK,CAACQ,EAAD,CAAV;AACH;;AACD,MAAIH,MAAM,CAACS,KAAP,IAAgB,CAACX,IAAI,CAACW,KAA1B,EAAiC;AAC7BX,IAAAA,IAAI,CAACW,KAAL,GAAaT,MAAM,CAACS,KAApB;AACH;;AACD,SAAO1B,EAAE,CAAC2B,MAAH,CAAUV,MAAM,CAACI,IAAjB,EAAuBN,IAAvB,CAAP;AACH;;AACDlB,OAAO,CAACG,EAAR,GAAaW,MAAb;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIiB,kBAAkB,GAAGxB,OAAO,CAAC,kBAAD,CAAhC;;AACAT,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,UAA/B,EAA2C;AAAEU,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOoB,kBAAkB,CAAC1B,QAA1B;AAAqC;AAA5E,CAA3C;AACA;AACA;AACA;AACA;AACA;AACA;;AACAL,OAAO,CAACgC,OAAR,GAAkBlB,MAAlB;AACA;AACA;AACA;AACA;AACA;;AACA,IAAImB,SAAS,GAAG1B,OAAO,CAAC,WAAD,CAAvB;;AACAT,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;AAAEU,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOsB,SAAS,CAAC7B,OAAjB;AAA2B;AAAlE,CAA1C","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = exports.io = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri);\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.query;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\n"]},"metadata":{},"sourceType":"script"}